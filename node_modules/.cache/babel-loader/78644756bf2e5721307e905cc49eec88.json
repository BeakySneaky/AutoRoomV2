{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexandre\\\\Documents\\\\HomeProjects\\\\AutoRoomV2\\\\src\\\\App.js\";\nimport React from 'react';\nimport SnackBar from './SnackBar';\nimport './App.css';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props); //this.getExpressServerStatus()\n\n    this.ws = new WebSocket('ws://127.0.0.1:8000');\n    this.timeout = 250;\n\n    this.connect = () => {\n      var ws = new WebSocket('ws://127.0.0.1:8000');\n      let that = this;\n      var connectInterval; // websocket onopen event listener\n\n      ws.onopen = () => {\n        console.log('Connected Websocket to Server');\n        this.setState({\n          ws: ws\n        });\n        that.timeout = 250;\n        clearTimeout(connectInterval);\n      }; // websocket onclose event listener\n\n\n      ws.onclose = e => {\n        console.log(`Socket is closed. Attempt to reconnect in ${Math.min(10000 / 1000, (that.timeout + that.timeout) / 1000)} second.`, e.reason);\n        that.timeout = that.timeout + that.timeout; //increment retry interval\n\n        connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)); //call check function after timeout\n      }; // websocket onerror event listener\n\n\n      ws.onerror = err => {\n        console.error('Socket encountered error: ', err.message, 'Closing socket');\n        ws.close();\n      };\n    };\n\n    this.check = () => {\n      const {\n        ws\n      } = this.state;\n      if (!ws || ws.readyState === WebSocket.CLOSED) this.connect(); //check if websocket instance is closed, if so call `connect` function.\n    };\n\n    this.wol = () => {\n      fetch('http://localhost:3002/WOL', {\n        method: 'POST'\n      }).then(() => {\n        this.sendSnackBar('WOL request sent !');\n      });\n    };\n\n    this.getExpressServerStatus = () => {\n      fetch('http://localhost:3002/status', {\n        method: 'GET'\n      }).then(response => {\n        this.setState({\n          WakeOnLanAvailable: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      return true;\n    };\n\n    this.sendSnackBar = message => {\n      setTimeout(() => {\n        this.setState({\n          SnackBarOn: false\n        });\n      }, 3000);\n      this.setState({\n        SnackBarOn: true,\n        SnackBarText: message\n      });\n    };\n\n    this.state = {\n      SnackBarOn: false,\n      SnackBarText: null,\n      WakeOnLanAvailable: false,\n      Ws: null\n    };\n  }\n\n  componentDidMount() {\n    this.connect();\n    /*this.ws.onopen = () => {\n    \tconsole.log('connected')\n    \tthis.setState({ WakeOnLanAvailable: true })\n    }\n    this.ws.onmessage = (message) => {\n    \tconsole.log(message)\n    }\n    this.ws.onclose = () =>{\n    \tconsole.log('disconnected')\n    \tthis.setState({ WakeOnLanAvailable: false })\n    }*/\n  }\n\n  render() {\n    if (this.state.WakeOnLanAvailable === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.wol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Wake On Lan\"), this.state.SnackBarOn === true ? React.createElement(SnackBar, {\n        text: this.state.SnackBarText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }) : '');\n    } else {\n      return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alexandre/Documents/HomeProjects/AutoRoomV2/src/App.js"],"names":["React","SnackBar","w3cwebsocket","WebSocket","App","Component","constructor","props","ws","timeout","connect","that","connectInterval","onopen","console","log","setState","clearTimeout","onclose","e","Math","min","reason","setTimeout","check","onerror","err","error","message","close","state","readyState","CLOSED","wol","fetch","method","then","sendSnackBar","getExpressServerStatus","response","WakeOnLanAvailable","catch","SnackBarOn","SnackBarText","Ws","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SnackBar from './SnackBar'\nimport './App.css'\nimport { w3cwebsocket as WebSocket } from 'websocket'\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\t//this.getExpressServerStatus()\n\t\tthis.state = {\n\t\t\tSnackBarOn: false,\n\t\t\tSnackBarText: null,\n\t\t\tWakeOnLanAvailable: false,\n\t\t\tWs: null\n\t\t}\n\t}\n\n\tws = new WebSocket('ws://127.0.0.1:8000')\n\n\tcomponentDidMount() {\n\t\tthis.connect()\n\t\t/*this.ws.onopen = () => {\n\t\t\tconsole.log('connected')\n\t\t\tthis.setState({ WakeOnLanAvailable: true })\n\t\t}\n\t\tthis.ws.onmessage = (message) => {\n\t\t\tconsole.log(message)\n\t\t}\n\t\tthis.ws.onclose = () =>{\n\t\t\tconsole.log('disconnected')\n\t\t\tthis.setState({ WakeOnLanAvailable: false })\n\t\t}*/\n\t}\n\n\ttimeout = 250\n\n\tconnect = () => {\n\t\tvar ws = new WebSocket('ws://127.0.0.1:8000')\n\t\tlet that = this\n\t\tvar connectInterval\n\n\t\t// websocket onopen event listener\n\t\tws.onopen = () => {\n\t\t\tconsole.log('Connected Websocket to Server')\n\n\t\t\tthis.setState({ ws: ws })\n\n\t\t\tthat.timeout = 250\n\t\t\tclearTimeout(connectInterval)\n\t\t}\n\n\t\t// websocket onclose event listener\n\t\tws.onclose = (e) => {\n\t\t\tconsole.log(\n\t\t\t\t`Socket is closed. Attempt to reconnect in ${Math.min(\n\t\t\t\t\t10000 / 1000,\n\t\t\t\t\t(that.timeout + that.timeout) / 1000\n\t\t\t\t)} second.`,\n\t\t\t\te.reason\n\t\t\t)\n\n\t\t\tthat.timeout = that.timeout + that.timeout //increment retry interval\n\t\t\tconnectInterval = setTimeout(this.check, Math.min(10000, that.timeout)) //call check function after timeout\n\t\t}\n\n\t\t// websocket onerror event listener\n\t\tws.onerror = (err) => {\n\t\t\tconsole.error('Socket encountered error: ', err.message, 'Closing socket')\n\n\t\t\tws.close()\n\t\t}\n\t}\n\n\tcheck = () => {\n\t\tconst { ws } = this.state\n\t\tif (!ws || ws.readyState === WebSocket.CLOSED) this.connect() //check if websocket instance is closed, if so call `connect` function.\n\t}\n\n\trender() {\n\t\tif (this.state.WakeOnLanAvailable === true) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={this.wol}>Wake On Lan</button>\n\t\t\t\t\t{this.state.SnackBarOn === true ? (\n\t\t\t\t\t\t<SnackBar text={this.state.SnackBarText} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\twol = () => {\n\t\tfetch('http://localhost:3002/WOL', {\n\t\t\tmethod: 'POST'\n\t\t}).then(() => {\n\t\t\tthis.sendSnackBar('WOL request sent !')\n\t\t})\n\t}\n\n\tgetExpressServerStatus = () => {\n\t\tfetch('http://localhost:3002/status', {\n\t\t\tmethod: 'GET'\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ WakeOnLanAvailable: true })\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t\treturn true\n\t}\n\n\tsendSnackBar = (message) => {\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ SnackBarOn: false })\n\t\t}, 3000)\n\t\tthis.setState({ SnackBarOn: true, SnackBarText: message })\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}